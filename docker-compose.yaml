version: '3.7'

services:
  bot:
    container_name: bot
    environment:
      PYTHONUNBUFFERED: 1
    build:
      context: ./bot
    environment:
      - TMI_TOKEN=${TMI_TOKEN}
      - BOT_PREFIX=${BOT_PREFIX}
      - CHANNEL=${CHANNEL}
    volumes:
      - ./bot/bot.py:/app/bot.py
      - ./bot/log.txt:/app/log.txt

  redis:
    image: redis:alpine
    volumes:
      - redis-data:/data
    container_name: redis
    ports:
      - "6379:6379"
    restart: on-failure

  quasar:
    container_name: quasar
    build:
      context: ./quasar
    ports:
      - "8080:8080"
    volumes:
      - ./quasar:/app/:rw
    restart: on-failure

  flask:
    container_name: flask
    working_dir: /code
    build: "./flask"
    volumes:
      - ./flask:/code
    environment:
      - REDIS_HOST=redis
    expose:
      - "5000"
    depends_on:
      - redis
    restart: on-failure

  icecast:
    container_name: icecast
    image: cakebread/gigcaster-icecast
    working_dir: /home/icecast
    volumes:
      - ./config:/home/icecast/config
      - ./certs:/home/icecast/certs
      - ./log:/home/icecast/log
    ports:
      - "9595:8000"
      - "9001:9001"
    restart: on-failure

    
volumes:
  redis-data:
  quasar:
  flask:
  config:
  certs:
  log:

